#include <FastLED.h>

#define NUM_LEDS 560   // Total number of LEDs in your strip (20x2)
#define DATA_PIN 13      // Pin connected to the data input of the LED strip
#define NUM_ROWS 28    // Number of rows in the zigzag layout
#define NUM_COLS 20    // Number of columns in the zigzag layout
#define BUTTON_PIN 2    // Digital pin for the button

CRGB leds[NUM_LEDS];

void setup() {
  FastLED.addLeds<WS2812, DATA_PIN, GRB>(leds, NUM_LEDS);
  FastLED.setBrightness(100);  // Adjust brightness (0-255)
  pinMode(BUTTON_PIN, INPUT_PULLUP); // Set the button pin as input with a pull-up resistor
}

CRGB colors[NUM_ROWS][NUM_COLS] = {
  // Define your first frame (20x2) color codes here...
  // Format: {0xRRGGBB, 0xRRGGBB, ...} for each row
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff53ff, 0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000},
{0x000000, 0x000000, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0xff53ff, 0xff53ff, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0x000000, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0x000000, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0xff53ff, 0xff53ff, 0x000000, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0x000000, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0xffffff, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000, 0x000000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffd966, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x000000, 0xff0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0xff0000, 0x000000, 0xff53ff, 0x000000, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x008000, 0x5353ff, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000, 0x008000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0xffd966, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0xffd966, 0xffd966, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0xffd966, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0xffd966, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000},
  // Define hex codes for the first frame for all rows and columns
};

CRGB colors2[NUM_ROWS][NUM_COLS] = {
  // Define your second frame (20x2) color codes here...
  // Format: {0xRRGGBB, 0xRRGGBB, ...} for each row
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff53ff, 0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000},
{0x000000, 0x000000, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0xff53ff, 0xff53ff, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0x000000, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0x000000, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0xff53ff, 0xff53ff, 0x000000, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0x000000, 0xa8f0ff, 0xff53ff, 0x000000, 0xff53ff, 0xa8f0ff, 0xa8f0ff, 0xa8f0ff, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0xffffff, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000, 0x000000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffd966, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x000000, 0xff0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x000000, 0xff0000, 0x000000, 0xff53ff, 0x000000, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000, 0x008000, 0x5353ff, 0xa8f0ff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x5353ff, 0x000000},
{0x000000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000, 0x008000, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x5353ff, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0xffd966, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0xffd966, 0xffd966, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0xffd966, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0xffd966, 0x000000, 0xffd966, 0x000000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0xffd966, 0xffd966, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000},
{0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000},
  // Define hex codes for the second frame for all rows and columns
};

int currentFrame = 0; // Index of the currently displayed frame (0 or 1)

void loop() {
  // Check if the button is pressed
  if (digitalRead(BUTTON_PIN) == HIGH) {
    // Button is pressed, switch to the next frame
    currentFrame = (currentFrame + 1) % 2; // Toggle between 0 and 1
  }

  // Display the current frame on the LED strip
  for (int row = 0; row < NUM_ROWS; row++) {      
    if (row % 2 == 0) {
      // Even rows (left to right)
      for (int col = 0; col < NUM_COLS; col++) {
        leds[row * NUM_COLS + col] = (currentFrame == 0) ? colors[row][col] : colors2[row][col];
      }
    } else {
      // Odd rows (right to left)
      for (int col = 0; col < NUM_COLS; col++) {
        leds[row * NUM_COLS + (NUM_COLS - 1 - col)] = (currentFrame == 0) ? colors[row][col] : colors2[row][col];
      }
    }
  }

  FastLED.show();

  // Add any other animation logic here

  // Delay for a short time to avoid button debounce
  delay(250);
}